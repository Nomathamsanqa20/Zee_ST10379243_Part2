@model IEnumerable<Zee_ST10379243_Part2.Models.Volunteer>
@{
    ViewData["Title"] = "Volunteers";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2><i class="fas fa-users text-warning"></i> Our Volunteers</h2>
        <a asp-action="Register" class="btn btn-warning">
            <i class="fas fa-user-plus"></i> Join as Volunteer
        </a>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info">
            <i class="fas fa-info-circle"></i> No volunteers have registered yet.
            <a asp-action="Register" class="alert-link">Be the first to join our volunteer team</a>!
        </div>
    }
    else
    {
        <div class="row">
            @foreach (var volunteer in Model)
            {
                <div class="col-md-6 col-lg-4 mb-4">
                    <div class="card h-100">
                        <div class="card-body text-center">
                            <div class="bg-light rounded-circle d-inline-flex align-items-center justify-content-center mb-3"
                                 style="width: 80px; height: 80px;">
                                <i class="fas fa-user fa-2x text-secondary"></i>
                            </div>
                            <h5 class="card-title">@volunteer.User?.FirstName @volunteer.User?.LastName</h5>
                            <p class="card-text">
                                <strong>Skills:</strong> @volunteer.Skills<br>
                                <strong>Availability:</strong> @volunteer.Availability<br>
                                <strong>Preferred Location:</strong> @volunteer.PreferredLocation
                            </p>
                            @if (volunteer.HasTransportation)
                            {
                                <span class="badge bg-success mb-2">
                                    <i class="fas fa-car"></i> Has Transportation
                                </span>
                            }
                        </div>
                        <div class="card-footer text-center">
                            <span class="badge bg-@GetStatusColor(volunteer.Status)">@volunteer.Status</span>
                            <small class="d-block text-muted mt-1">
                                Joined: @volunteer.RegisteredAt.ToString("MMM dd, yyyy")
                            </small>
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="mt-4">
            <div class="alert alert-warning">
                <h5><i class="fas fa-chart-pie"></i> Volunteer Statistics</h5>
                <p>
                    Total Active Volunteers: @Model.Count(v => v.Status == "Active")<br>
                    New Volunteers (Last 30 days): @Model.Count(v => v.RegisteredAt > DateTime.UtcNow.AddDays(-30))
                </p>
            </div>
        </div>
    }
</div>

@functions {
    string GetStatusColor(string status)
    {
        return status?.ToLower() switch
        {
            "active" => "success",
            "inactive" => "secondary",
            "on leave" => "warning",
            _ => "secondary"
        };
    }
}